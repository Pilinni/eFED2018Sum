«адание 1 Ц подсчЄт букв.

function countChar (str) {
       var length = str.length; // число символов в строке
       otvet = 0;                        // счетчик
       for(n=0; n<length; n++) {
           var c = str.charAt(n);              // получаем  c - символ строки
           if(c=="m"||c=="M")                    //если символ наш, добавл€ем счетчик
          otvet++;
        }
      return otvet;
 }
console.log(countChar("My Random String"));

«адание 2 Ц √лубокое сравнение

function deepCompare (a, b){
        
        if(a === b) {
	return true;
}
return false;
}
console.log(deepCompare({ one: 1, two: С2Т }, { one: 1, two: С2Т }));

\\\\\\или, но оба нерабочие\\\\

function deepCompare (a, b){
        
        if(a === b) {
	return true;
}
          else{
return false;
}
}
console.log(deepCompare({ one: 1, two: С2Т }, { one: 1, two: С2Т }));


function deepCompare (a, b)
{ if(a === b) 
return true; 
for(var i in a)
{ if(!deepCompare (a[i], b[i])) 
return false; 
} 
for(var i in b)
{ if(!deepCompare (a[i], b[i])) 
return false; 
} 
return true; 
}
console.log(deepCompare({ one: 1, two: С2Т }, { one: 1, two: С2Т }));

«адание 3 Ц Ўахматна€ доска

function chessBoard (a, b){

     var board = "";
     for (var y = 0; y < a; y++) {
           for (var x = 0; x < b; x++) {
    	 if ((x + y) % 2 == 0)
      	      board += " ";
    	  else
      	      board += "#";
           }
           board += "\n";
     }
     return board;
}
console.log(chessBoard (8, 8));

«адание 4 Ц ƒиапазон

function makeArray (a,b,c) {
	    if (c == undefined) c=1;
	    var arr = [];
	    if(c>0){
	        for (i=a;i<=b;i+=c){
	            arr.push(i);
	        }} else
	        for (i=a;i>=b;i+=c){
	            arr.push(i);
	        }
	    return arr;
	}
	function sum(arr) {
	    var sum=0;
	    for(var i=0;i<=arr.length-1;i++){
	        sum+=arr[i];
	    }
	    return sum;
	}
console.log(makeArray (1, 10));

«адание 5 Ц Ќаоборот

function reverseArray(array) {
  var reversedArray = [];
  for (var i = array.length - 1; i >= 0; i--)
    reversedArray.push(array[i]);
  return reversedArray;
}

console.log(reverseArray( [1, 2, 3, 4]));

// > [4, 3, 2, 1]

function reverseArrayInPlace(array) {
  var buffer = 'undefinded';
  if (array.length % 2 == 0) {
    for (var i = 0; i < Math.floor(array.length / 2) + 1; i++) {
      buffer = array[i];
      array[i] = array[array.length-1 - i];
      array[array.length-1 - i] = buffer;
    }
  } else {
    for (var i = 0; i < Math.floor(array.length / 2); i++) {
      buffer = array[i];
      array[i] = array[array.length-1 - i];
      array[array.length-1 - i] = buffer;
    }
  }
  return array;
}

var arrayValue = ["A", "B", "C","D",];
reverseArrayInPlace(arrayValue);
console.log(arrayValue);

// > ["D", "C", "B", "A"];


«адание 6 Ц —вЄртка

function mergeArrays(arr1, arr2, arr3, ...arrN) {
  
  arr1 = arr1.concat(arr2, arr3, ...arrN)
  var obj = {};
  for (var i = 0; i < arr1.length; i++) {
        var str = arr1[i];
        obj[str] = true; // запомнить строку в виде свойства объекта
        }
 return Object.keys(obj);    
}
console.log(mergeArrays([1, 2], [3, 4], [5, 6]));
console.log(mergeArrays([1, 2], [2, 4], [4, 6]));
